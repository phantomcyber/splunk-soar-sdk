name: Tests and Code Quality
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install commitlint
        run: npm i -g @commitlint/cli @commitlint/config-conventional
      - name: Commitlint
        run: commitlint --from "origin/${{ github.base_ref }}" --to "origin/${{ github.head_ref }}"

  semantic_release_dryrun:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install semantic-release dependencies
        run: npm install --global semantic-release @semantic-release/exec @semantic-release/git
      - name: Check out the target branch and merge onto it
        run: |
          git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}
          git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}
          git checkout ${{ github.base_ref }}
          git merge --ff-only ${{ github.head_ref }}
      - name: Run Semantic Release as a dry run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          unset GITHUB_ACTIONS GITHUB_REF GITHUB_EVENT_NAME
          semantic-release --dry-run --no-ci

  Ruff:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: pip install --upgrade pip && pip install uv
      - name: Install dependencies
        run: uv sync --frozen
      - name: Ruff - ${{ matrix.python-version }}
        run: uv run ruff check
  Ruff-Format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: pip install --upgrade pip && pip install uv
      - name: Install dependencies
        run: uv sync --frozen
      - name: Ruff-Format - ${{ matrix.python-version }}
        run: uv run ruff format --check

  MyPy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: pip install --upgrade pip && pip install uv
      - name: Install dependencies
        run: uv sync --frozen
      - name: MyPy - ${{ matrix.python-version }}
        run: uv run mypy .

  # These will always fail until we break the dependency on phantom core libs
  # Pytest:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: [3.9, 3.13]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install uv
  #       run: pip install --upgrade pip && pip install uv
  #     - name: Install dependencies
  #       run: uv sync --frozen
  #     - name: Pytest + Coverage - ${{ matrix.python-version }}
  #       run: uv run pytest
